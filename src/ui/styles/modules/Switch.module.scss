// Switch Component Styles
// ========================
@use '../tokens/_colors.scss' as *;
@use '../tokens/_spacing.scss' as *;
@use '../tokens/_typography.scss' as *;

// Transitions
$transition-fast: 150ms ease-in-out;

.switchGroup {
  display: flex;
  flex-direction: column;
  gap: $spacing-2;
  width: 100%;
}

.switchWrapper {
  display: flex;
  align-items: center;
  gap: $spacing-3;
  cursor: pointer;
  transition: all $transition-fast;
  padding: $spacing-2;
  border-radius: $border-radius;
  
  &:hover {
    background: rgba($color-primary, 0.02);
  }

  &.disabled {
    cursor: not-allowed;
    opacity: 0.6;

    &:hover {
      background: transparent;
    }
  }
}

.switch {
  position: relative;
  flex-shrink: 0;
  display: inline-block;
  // Default size (medium) to match track
  width: 44px;
  height: 24px;
}

.input {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  cursor: pointer;
  z-index: 2;

  &:disabled {
    cursor: not-allowed;
  }
}

.track {
  position: relative;
  background: $neutral-200;
  border-radius: 50px;
  transition: all $transition-fast;
  cursor: pointer;
  backdrop-filter: blur(8px);
  box-shadow: 
    inset 0 2px 4px rgba(0, 0, 0, 0.06),
    0 1px 3px rgba(0, 0, 0, 0.1);
  z-index: 1;

  // Default size (medium)
  width: 44px;
  height: 24px;

  &::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: white;
    transition: all $transition-fast;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
}

.input:checked + .track {
  background: linear-gradient(135deg, $color-primary, $primary-600);
  box-shadow: 
    inset 0 1px 3px rgba($color-primary, 0.2),
    0 2px 8px rgba($color-primary, 0.15);

  &::before {
    transform: translateX(20px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }
}

.input:focus + .track {
  box-shadow: 
    inset 0 1px 3px rgba(0, 0, 0, 0.1),
    0 0 0 3px rgba($color-primary, 0.08),
    0 2px 8px rgba(0, 0, 0, 0.04);
}

.input:hover:not(:disabled) + .track {
  background: $neutral-100;
  transform: translateY(-1px);

  &::before {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12);
  }
}

.input:checked:hover:not(:disabled) + .track {
  background: linear-gradient(135deg, $primary-400, $primary-600);
}

.input:disabled + .track {
  background: $color-disabled;
  cursor: not-allowed;
  transform: none;

  &::before {
    background: $neutral-100;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }
}

.input:checked:disabled + .track {
  background: $neutral-300;
}

.content {
  flex: 1;
  min-width: 0;
}

.label {
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  color: $color-text-primary;
  margin: 0 0 $spacing-1;
  line-height: $line-height-tight;
  cursor: pointer;

  &.required::after {
    content: ' *';
    color: $color-danger;
  }

  .switchWrapper.disabled & {
    color: $color-disabled-text;
    cursor: not-allowed;
  }
}

.description {
  font-size: $font-size-sm;
  color: $color-text-secondary;
  margin: 0;
  line-height: $line-height-normal;

  .switchWrapper.disabled & {
    color: $color-disabled-text;
  }
}

.helpText {
  font-size: $font-size-xs;
  color: $color-text-secondary;
  margin: 0;
  line-height: $line-height-tight;
}

.errorText {
  font-size: $font-size-xs;
  color: $color-danger;
  margin: 0;
  line-height: $line-height-tight;
  display: flex;
  align-items: center;
  gap: $spacing-1;

  &::before {
    content: 'âš ';
    font-size: $font-size-sm;
  }
}

// Size variations
.small {
  .switch {
    width: 36px;
    height: 20px;
  }

  .track {
    width: 36px;
    height: 20px;

    &::before {
      width: 16px;
      height: 16px;
    }
  }

  .input:checked + .track::before {
    transform: translateX(16px);
  }

  .label {
    font-size: $font-size-sm;
  }

  .description {
    font-size: $font-size-xs;
  }
}

.large {
  .switch {
    width: 52px;
    height: 28px;
  }

  .track {
    width: 52px;
    height: 28px;

    &::before {
      width: 24px;
      height: 24px;
    }
  }

  .input:checked + .track::before {
    transform: translateX(24px);
  }

  .label {
    font-size: $font-size-lg;
  }
}

// Error state
.error {
  .track {
    border: 1px solid $color-danger;
  }

  .input:checked + .track {
    background: linear-gradient(135deg, $color-danger, $danger-600);
    border-color: $color-danger;
  }

  .input:focus + .track {
    box-shadow: 
      inset 0 1px 3px rgba(0, 0, 0, 0.1),
      0 0 0 3px rgba($color-danger, 0.08),
      0 2px 8px rgba(239, 68, 68, 0.08);
  }
}

// Success state
.success {
  .track {
    border: 1px solid $color-success;
  }

  .input:checked + .track {
    background: linear-gradient(135deg, $color-success, $success-600);
    border-color: $color-success;
  }

  .input:focus + .track {
    box-shadow: 
      inset 0 1px 3px rgba(0, 0, 0, 0.1),
      0 0 0 3px rgba($color-success, 0.08),
      0 2px 8px rgba(16, 185, 129, 0.08);
  }
}

// Loading state
.loading {
  .track::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    opacity: 0.6;
  }

  .track::before {
    opacity: 0.5;
  }
}

// Alignment variations
.switchWrapper {
  &.alignEnd {
    flex-direction: row-reverse;
  }

  &.alignCenter {
    align-items: center;
  }

  &.alignStart {
    align-items: flex-start;
  }
}

// With icons variant
.withIcons {
  .track {
    padding: 0 $spacing-1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    
    &::before {
      z-index: 2;
    }
    
    &::after {
      display: none;
    }
  }

  .onIcon,
  .offIcon {
    position: absolute;
    font-size: 10px;
    color: white;
    z-index: 1;
    transition: opacity $transition-fast;
  }

  .onIcon {
    right: 6px;
    opacity: 0;
  }

  .offIcon {
    left: 6px;
    opacity: 1;
  }

  .input:checked + .track {
    .onIcon {
      opacity: 1;
    }

    .offIcon {
      opacity: 0;
    }
  }
}

@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

// Animation for switch toggle
@keyframes switchAnimation {
  0% {
    transform: translateX(0) scale(1);
  }
  50% {
    transform: translateX(10px) scale(1.1);
  }
  100% {
    transform: translateX(20px) scale(1);
  }
}

.input:checked + .track::before {
  animation: switchAnimation 0.2s ease-out;
}